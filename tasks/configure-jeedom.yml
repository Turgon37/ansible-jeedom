---

### JEEDOM configuration init
- name: Check presence of common.config
  stat:
    path: '{{ jeedom__common_configuration_file }}'
  register: _jeedom__common_config_status
  check_mode: False

- name: Copy configuration template
  copy:
    src:        '{{ jeedom__install_directory }}/core/config/common.config.sample.php'
    dest:       '{{ jeedom__common_configuration_file }}'
    owner:      '{{ jeedom__user }}'
    group:      '{{ jeedom__group }}'
    remote_src: True
  when: not _jeedom__common_config_status.stat.exists

- name: Configure database params
  replace:
    path:    '{{ jeedom__common_configuration_file }}'
    regexp:  '#{{ item.key }}#'
    replace: '{{ item.value }}'
  with_items:
    - key: HOST
      value: '{{ jeedom__config_db_host }}'
    - key: PORT
      value: '{{ jeedom__config_db_port }}'
    - key: DBNAME
      value: '{{ jeedom__config_db_dbname }}'
    - key: USERNAME
      value: '{{ jeedom__config_db_username }}'
    - key: PASSWORD
      value: '{{ jeedom__config_db_password }}'
  no_log: True

- name: Check if database is initialized
  command: >
    /usr/bin/env mysql
    --user={{ jeedom__config_db_username }}
    --password={{ jeedom__config_db_password }}
    --batch --skip-column-names
    --execute="SHOW TABLES FROM `{{ jeedom__config_db_dbname }}` LIKE '%config%'"
  register: _jeedom__database_installation_status
  changed_when: False
  check_mode: False

- name: initialize the Jeedom database
  command: '/usr/bin/env php {{ jeedom__install_directory }}/install/install.php mode=force'
  when: _jeedom__database_installation_status.stdout|length == 0

- name: Configure crontab jobs
  cron:
    name:      JEEDOM-jeeCron
    job:       '/usr/bin/php {{ jeedom__install_directory }}/core/php/jeeCron.php > /dev/null'
    user:      '{{ jeedom__user }}'
    cron_file: '{{ jeedom__cron_file }}'
    state:     "{{ jeedom__cron_enabled|d(True)|ternary('present', 'absent') }}"
